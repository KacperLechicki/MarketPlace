{
  "swagger": "2.0",
  "info": {
    "version": "3.0.0",
    "title": "Marketplace API Documentation",
    "description": "REST API for E-commerce Webshop - Eclectify \n\n **${api} =>** /api/v1 \n\n **${auth} =>** /auth/v1"
  },
  "host": "localhost:3000",
  "basePath": "",
  "schemes": [
    "http"
  ],
  "paths": {
    "${api}/products/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get list of products.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "category",
            "description": "Categories ids.",
            "in": "query",
            "type": "string"
          },
          {
            "name": "categories",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Products retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "list of products"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add new product.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Product name"
                },
                "description": {
                  "type": "string",
                  "example": "Product short description"
                },
                "longDescription": {
                  "type": "string",
                  "example": "Product long description"
                },
                "image": {
                  "type": "string",
                  "example": "Path to product image"
                },
                "images": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "brand": {
                  "type": "string",
                  "example": "Product brand"
                },
                "price": {
                  "type": "number",
                  "example": 10
                },
                "stock": {
                  "type": "number",
                  "example": 1
                },
                "category": {
                  "type": "string",
                  "example": "Id of product category"
                },
                "rating": {
                  "type": "number",
                  "example": 6
                },
                "isFeatured": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Product created successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "createdProduct object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "An error occurred."
                },
                "error": {
                  "type": "string",
                  "example": "error"
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${api}/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by id.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of product."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Product retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "product object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Product not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update existing product.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of product."
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product data.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Product name"
                },
                "description": {
                  "type": "string",
                  "example": "Product short description"
                },
                "longDescription": {
                  "type": "string",
                  "example": "Product long description"
                },
                "image": {
                  "type": "string",
                  "example": "Path to product image"
                },
                "images": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "brand": {
                  "type": "string",
                  "example": "Product brand"
                },
                "price": {
                  "type": "number",
                  "example": 10
                },
                "stock": {
                  "type": "number",
                  "example": 1
                },
                "category": {
                  "type": "string",
                  "example": "Id of product category"
                },
                "rating": {
                  "type": "number",
                  "example": 6
                },
                "isFeatured": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Product updated successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Product not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete a product.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of product."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Product deleted successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Product not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${api}/products/statistics/count": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get count of products.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Products count retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "productsCount: count"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Products not found."
                },
                "payload": {
                  "type": "string",
                  "example": "productsCount: 0"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${api}/products/featured/{count}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get list of featured products.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "count",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Count of requested feature products."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Products retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "list of featured products"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${api}/categories/": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get list of categories.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Categories retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "list of categories"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Add new category.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "body",
            "in": "body",
            "description": "Category data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Category name"
                },
                "icon": {
                  "type": "string",
                  "example": "Icon"
                },
                "color": {
                  "type": "string",
                  "example": "#000000"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Category created successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "createdCategory object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "An error occurred."
                },
                "error": {
                  "type": "string",
                  "example": "error"
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${api}/categories/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get category by id.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of category."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Category retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "category object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Category not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Update existing category.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of category."
          },
          {
            "name": "body",
            "in": "body",
            "description": "Category data.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Category name"
                },
                "icon": {
                  "type": "string",
                  "example": "Icon"
                },
                "color": {
                  "type": "string",
                  "example": "#000000"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Category updated successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Category not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete a category.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of category."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Category deleted successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Category not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${api}/categories/statistics/count": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get count of categories.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Categories count retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "categoriesCount: count"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Categories not found."
                },
                "payload": {
                  "type": "string",
                  "example": "categoriesCount: 0"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${api}/orders/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get list of orders.",
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Orders retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "list of orders"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "description": "",
        "parameters": [
          {
            "name": "api",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "orderItems": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "${auth}/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Authorize user.",
        "description": "",
        "parameters": [
          {
            "name": "auth",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "body",
            "in": "body",
            "description": "User credentials.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "User email"
                },
                "password": {
                  "type": "string",
                  "example": "User password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User logged in successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Credentials do not match. Authorization failed."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${auth}/users/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add new user.",
        "description": "",
        "parameters": [
          {
            "name": "auth",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "body",
            "in": "body",
            "description": "User data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "User name"
                },
                "email": {
                  "type": "string",
                  "example": "User email"
                },
                "password": {
                  "type": "string",
                  "example": "User password"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User created successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "createdUser object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User with that e-mail already exists."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "An error occurred."
                },
                "error": {
                  "type": "string",
                  "example": "error"
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${auth}/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get list of users.",
        "description": "",
        "parameters": [
          {
            "name": "auth",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Users retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "list of users"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${auth}/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id.",
        "description": "",
        "parameters": [
          {
            "name": "auth",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of user."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "user object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update existing user.",
        "description": "",
        "parameters": [
          {
            "name": "auth",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of user."
          },
          {
            "name": "body",
            "in": "body",
            "description": "User data.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "User name"
                },
                "email": {
                  "type": "string",
                  "example": "User email"
                },
                "phone": {
                  "type": "string",
                  "example": "111 222 333"
                },
                "password": {
                  "type": "string",
                  "example": "User password"
                },
                "isAdmin": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User updated successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete an user.",
        "description": "",
        "parameters": [
          {
            "name": "auth",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of user."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "User deleted successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "User not found."
                },
                "payload": {
                  "type": "string",
                  "example": "null"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "${auth}/users/statistics/count": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get count of users.",
        "description": "",
        "parameters": [
          {
            "name": "auth",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "A variable that stores part of the url."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Users count retrieved successfully."
                },
                "payload": {
                  "type": "string",
                  "example": "usersCount: count"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Users not found."
                },
                "payload": {
                  "type": "string",
                  "example": "usersCount: 0"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  }
}